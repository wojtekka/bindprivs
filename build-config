#!/usr/bin/perl

# bindprivs v0.02b
# (c) copyright 1999, 2001 by wojtek kanieski <wojtekka@irc.pl>

if ($ARGV[0]) {
  open (CF, $ARGV[0]) || die "can't open config file ($ARGV[0])\n"
} else {
  open (CF, "bindprivs.conf") || die "can't open config file\n";
}

open (H, ">config.h");

print H "/*\n";
print H " * bindprivs v0.02\n";
print H " * (c) copyright 1999 by wojtek kaniewski <wojtekka\@irc.pl>\n";
print H " *\n";
print H " * file generated by build-config script\n";
print H " */\n\n";

$uname = `uname -a`;
if ($uname =~ /SMP/) {
  print H "#define __SMP__\n\n";
}

$entries = 0;
$line = 0;

while (<CF>) {
  $line++;
  next if /^#/;
  chop;
  s/\s*#.*$//;
  ($action, $addr, $ids) = /^\s*(\S*)\s*(\S*)\s*(.*)/;

  next if (!$action);
  
  if ($action eq "allow" || $action eq "allowuser" || $action eq "allowusers") {
    $actions[$entries] = "ALLOW_USERS";
  } elsif ($action eq "deny" || $action eq "denyuser" || $action eq "denyusers") {
    $actions[$entries] = "DENY_USERS";  
  } elsif ($action eq "allowgroup" || $action eq "allowgroups") {
    $actions[$entries] = "ALLOW_GROUPS";
    $groups = 1;
  } elsif ($action eq "denygroup" || $action eq "denygroups") {
    $actions[$entries] = "DENY_GROUPS";
    $groups = 1;
  } else { die "line $line: unknown action ($action)\n"; }

  if ($addr eq "any" || $addr eq "all") { $addr = "0.0.0.0/0.0.0.0"; }
  if ($addr !~ "/") { $addr .= "/255.255.255.255"; }
  ($addr, $mask) = split(/\//, $addr);

  if ($mask =~ /\./) {
    $mask_str[$entries] = $mask;
    $mask_ip[$entries] = sprintf "0x%.2x%.2x%.2x%.2x", reverse split(/\./, $mask);
  } else {
    $mask_str[$entries] = "/" . $mask;
    $mask_ip[$entries] = sprintf "0x%.8x", (2 ** $mask) - 1;
  }

  $addr_str[$entries] = $addr;
  $addr_ip[$entries] = sprintf "0x%.2x%.2x%.2x%.2x", reverse split(/\./, $addr);

  if (!$ids || $ids eq "any" || $ids eq "all") {
    $id_val[$entries] = "NULL";
  } else {
    foreach $id (split(/ /, $ids)) {
      if (!$groups) { $id2 = getpwnam($id); } else { $id2 = getgrnam($id); }
      if ($id2 eq "") { die "line $line: invalid user/group ($id)\n"; }
      $id_table[$entries] .= $id2 . ", ";
    }
    $id_val[$entries] = "__id_table_$entries";
    if (!$groups) {
      $id_desc[$entries] = "users: " . $ids;
    } else {
      $id_desc[$entries] = "groups: " . $ids;
    }
  }

  $description[$entries] = $_;
  $entries++;
}

print H "#define ENTRIES $entries\n\n";

for ($i = 0; $i < $entries; $i++) {
  if ($id_table[$i]) {
    print H "/* $id_desc[$i] */\n";
    print H "int __id_table_$i\[\] = { $id_table[$i]\-1 };\n";
    $some_id = 1;
  }
}

if ($some_id) { print H "\n"; }

print H "struct bindprivs_entry bindprivs_config[] = {\n";
for ($i = 0; $i < $entries; $i++) {
  print H "  /* $description[$i] */\n";
  print H "  { $actions[$i], $addr_ip[$i], $mask_ip[$i], $id_val[$i] },\n";
}

print H "};\n\n";

print "$entries entries written.\n";