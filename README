/* 
 * bindprivs v0.02b -- instrukcja obs³ugi
 * (c) copyright 1999, 2001 by wojtek kaniewski <wojtekka@irc.pl>
 */

.--UWAGA--UWAGA--UWAGA--UWAGA--UWAGA--UWAGA--UWAGA--UWAGA--UWAGA--UWAGA--.
| wersja 0.02b nie by³a zbyt mocno testowana. z pobie¿nych obserwacji    |
| wynika, ¿e dzia³a prawid³owo na kernelach z SMP itd, itd. jak zawsze,  |
| u¿ywasz na w³asne ryzyko. skrypt `build-config' powinien na podstawie  |
| `uname -r' wykryæ j±dro SMP i skompilowaæ odpowiedni± wersjê modu³u.   |
| reszta pliku, zw³aszcza o wersji 2.0 jest nieaktualna. nie chce mi siê |
| szukaæ kogo¶, kto to przetestuje. to tylko `hotfix' ;)                 |
`--UWAGA--UWAGA--UWAGA--UWAGA--UWAGA--UWAGA--UWAGA--UWAGA--UWAGA--UWAGA--'

jest to prosty modulik dla kerneli rodzin 2.0 i 2.2, który pozwala ograniczaæ
dostêp do danych interfejsów (i aliasów IP) poszczególnym u¿ytkownikom. jego
dzia³anie polega na przejêciu funkcji systemowej bind(2).

niestety ze wzglêdu na prostotê modu³u, wszystkie ustawienia s± wkompilowane
na sta³e i nie mo¿na ich zmieniaæ podczas dzia³ania. ustawienia s± zapisane w
pliku `bindprivs.conf'. ka¿da linia zaczynaj±ca siê od `#' jest komentarzem i
zostanie zignorowana. pierwszy wyraz okre¶la komendê i informuje, jaka akcja
ma byæ podjêta, gdy podane informacje bêd± pasowa³y do sytuacji. mog± to byæ:

  `allow', `allowusers' - pozwalaj± na u¿ycie adresów danym u¿ytkownikom,
  `allowgroups' - pozwalaj± u¿yæ adresów grupom u¿ytkowników,
  `deny', `denyusers' - zabraniaj± u¿ycia u¿ytkownikom,
  `denygroups' - zabraniaj± u¿ycia adresów grupom u¿ytkowników.
  
pierwszy argument komendy okre¶la adres IP, lub klasê adresow±. dozwolone
notacje to:

  `adres.ip', np. `195.117.64.14'
  `adres.ip/zwykla.netmaska', np. `195.116.30.0/255.255.255.0'
  `adres.ip/ilo¶æ.bitów', np. `212.24.178.0/24'
  `any', oznacza dowolny adres IP
  
drugi argument, w zale¿no¶ci od komendy, zawiera listê u¿ytkowników lub grup
u¿ytkowników, których dotyczy dana akcja. elementy listy rodziela siê
spacjami. gdy akcja ma dotyczyæ wszystkich u¿ytkowników, mo¿na u¿yæ s³owa
`any' lub `all'. przyk³adowe wpisy to:

  allow any any
  
zezwala wszystkim u¿ytkownikom u¿ywaæ wszystkich adresów. jest to domy¶lna
regu³a programu przy braku jakichkolwiek wpisów.

  deny 194.204.139.0/24 any
  
zabrania wszystkim u¿ytkownikom korzystania z klasy C `194.204.139.0' -
przydatne gdy dana klasa zawiera wirtualne serwery www, a nie chcemy, ¿eby
u¿ytkownicy wychodzili w ¶wiat z adresami typu `www.nasz-klient.com.pl'.

  allow 194.204.139.0/24 root
  deny 194.204.139.0/24 any

powy¿sze dwie linie dzia³aj± podobnie jak poprzedni przyk³ad, lecz pozwalaj±
rootowi na bind()owanie podanych.

  allowgroup 134.35.101.2 friends
  allow 134.35.101.2 root jerry buzz mike
  deny 134.35.101.2 any

pozwala u¿ywaæ adresu `134.35.101.2' grupie `friends', administratorowi oraz
u¿ytkownikom `jerry', `buzz' i `mike'.

po zmianie pliku konfiguracyjnego nale¿y wywo³aæ polecenie `make build', które
skompiluje modu³. gdy wszystko przebiegnie pomy¶lnie, zostanie utworzony modu³
`bindprivs.o', gotowy do za³adowania poleceniem `insmod bindprivs.o' lub `make
load'.

gdy chcemy zmieniæ parametry modu³u, po edycji pliku `bindprivs.conf' mo¿na
wywo³aæ polecenie `make rebuild', które po kompilacji modu³u, usunie z pamiêci
star± wersjê i za³aduje now±. tak, prawie jak Windows.

// UWAGA! w przypadku kerneli rodziny 2.0, podczas kompilacji mog± siê pojawiæ
// ostrze¿enia o b³êdach w plikach nag³ówkowych. mo¿liwe, ¿e jest to b³±d
// specyficzny dla konfiguracji mojej maszyny (egcs-2.91.66, glibc-2.1.1-6),
// ale je¶li siê pojawi, mo¿na go spokojnie ignorowaæ.
 
modu³ by³ testowany przeze mnie na maszynach z redhatem 6.0 i kernelami
2.0.35, 2.2.9, 2.2.12. je¶li dzia³a³ poprawnie na systemach o innych
parametrach, proszê o kontakt (adres e-mail na górze).

je¶li kiedykolwiek uka¿e siê nowa lub poprawiona wersja programu, bêdzie siê
ona znajdowaæ pod adresami (fizycznie ten sam serwer):

  http://wojtekka.stone.pl/software/
  ftp://amba.bydg.pdi.net/pub/people/wojtekka/

podziêkowania dla: lcamtufa (za afhrm, sockpriv i tekst o modu³ach, dziêki
którym skleci³em to co¶), kod¿aka (za jego dzie³a, które sta³y siê inspiracj±
do napisania bindprivs), Mitcha (za nieumy¶lne podsuniêcie pomys³u), fahrena
(za sugestiê obs³ugi kerneli 2.0), maxia (za zachêcanie do walki), Pana (za
dobre chêci) i Tygrysa (nie wiem za co, ale te¿ dziêkujê). poza tym,
korzystaj±c z okazji, chcia³bym pozdrowiæ kana³ #plug ;).

